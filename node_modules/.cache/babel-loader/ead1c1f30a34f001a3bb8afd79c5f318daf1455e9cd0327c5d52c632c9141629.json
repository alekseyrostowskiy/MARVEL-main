{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useParams, Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/SetContent\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePage = ({\n  Component,\n  dataType\n}) => {\n  _s();\n  /* вроде как это компонент высшего порядка */\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  const {\n    getComic,\n    getCharacter,\n    clearError,\n    process,\n    setProcess\n  } = useMarvelService();\n  useEffect(() => {\n    updateData();\n  }, [id]);\n  const updateData = () => {\n    clearError();\n    switch (dataType) {\n      case \"comic\":\n        getComic(id).then(setData).then(() => setProcess(\"confirmed\"));\n        break;\n      case \"character\":\n        getCharacter(id).then(setData).then(() => setProcess(\"confirmed\"));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: setContent(process, Component, data)\n  }, void 0, false);\n};\n_s(SinglePage, \"x6zB6dXZusO7Bys2NIqWAdJ6CWg=\", false, function () {\n  return [useParams, useMarvelService];\n});\n_c = SinglePage;\nexport default SinglePage;\nvar _c;\n$RefreshReg$(_c, \"SinglePage\");","map":{"version":3,"names":["useParams","Link","useState","useEffect","useMarvelService","setContent","Fragment","_Fragment","jsxDEV","_jsxDEV","SinglePage","Component","dataType","_s","id","data","setData","getComic","getCharacter","clearError","process","setProcess","updateData","then","children","_c","$RefreshReg$"],"sources":["C:/Users/AMD Ryzen 5 2600/Desktop/Программирование/Новая папка/FrontEnd/MARVEL/MARVEL-main/src/components/pages/SinglePage.js"],"sourcesContent":["import { useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utils/SetContent\";\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n  /* вроде как это компонент высшего порядка */\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n\r\n  const { getComic, getCharacter, clearError, process, setProcess } =\r\n    useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateData();\r\n  }, [id]);\r\n\r\n  const updateData = () => {\r\n    clearError();\r\n\r\n    switch (dataType) {\r\n      case \"comic\":\r\n        getComic(id)\r\n          .then(setData)\r\n          .then(() => setProcess(\"confirmed\"));\r\n        break;\r\n      case \"character\":\r\n        getCharacter(id)\r\n          .then(setData)\r\n          .then(() => setProcess(\"confirmed\"));\r\n    }\r\n  };\r\n\r\n  return <>{setContent(process, Component, data)}</>;\r\n};\r\n\r\nexport default SinglePage;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,UAAU,MAAM,wBAAwB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAM;IAAEe,QAAQ;IAAEC,YAAY;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAC/DjB,gBAAgB,CAAC,CAAC;EAEpBD,SAAS,CAAC,MAAM;IACdmB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC;EAER,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBH,UAAU,CAAC,CAAC;IAEZ,QAAQP,QAAQ;MACd,KAAK,OAAO;QACVK,QAAQ,CAACH,EAAE,CAAC,CACTS,IAAI,CAACP,OAAO,CAAC,CACbO,IAAI,CAAC,MAAMF,UAAU,CAAC,WAAW,CAAC,CAAC;QACtC;MACF,KAAK,WAAW;QACdH,YAAY,CAACJ,EAAE,CAAC,CACbS,IAAI,CAACP,OAAO,CAAC,CACbO,IAAI,CAAC,MAAMF,UAAU,CAAC,WAAW,CAAC,CAAC;IAC1C;EACF,CAAC;EAED,oBAAOZ,OAAA,CAAAF,SAAA;IAAAiB,QAAA,EAAGnB,UAAU,CAACe,OAAO,EAAET,SAAS,EAAEI,IAAI;EAAC,gBAAG,CAAC;AACpD,CAAC;AAACF,EAAA,CA7BIH,UAAU;EAAA,QAECV,SAAS,EAItBI,gBAAgB;AAAA;AAAAqB,EAAA,GANdf,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}