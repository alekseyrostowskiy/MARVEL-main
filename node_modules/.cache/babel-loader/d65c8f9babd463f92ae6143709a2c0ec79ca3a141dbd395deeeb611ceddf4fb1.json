{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useHttp } from \"../hooks/http.hook\";\nconst useMarvelService = () => {\n  _s();\n  const {\n    request,\n    clearError,\n    process,\n    setProcess\n  } = useHttp(); // берём сущности хука\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\n  const _apiKey = \"apikey=c5d6fc8b83116d92ed468ce36bac6c62\";\n  const _baseOffset = 210;\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n  const getAllComics = async (offset = 0) => {\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  };\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n  const getComic = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects.language || \"en-us\",\n      price: comics.prices.price ? `${comics.prices.price}$` : \"not available\"\n    };\n  };\n  return {\n    process,\n    setProcess,\n    getAllCharacters,\n    getCharacter,\n    getCharacterByName,\n    clearError,\n    getAllComics,\n    getComic\n  };\n};\n_s(useMarvelService, \"MFhMEG/nXhFfr0XM4cYtgbBKKkQ=\", false, function () {\n  return [useHttp];\n});\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","_s","request","clearError","process","setProcess","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getAllComics","_transformComics","getCharacter","id","getComic","getCharacterByName","name","char","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","title","pageCount","language","textObjects","price","prices"],"sources":["C:/Users/AMD Ryzen 5 2600/Desktop/Программирование/Новая папка/FrontEnd/MARVEL/MARVEL-main/src/services/MarvelService.js"],"sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp(); // берём сущности хука\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\r\n  const _apiKey = \"apikey=c5d6fc8b83116d92ed468ce36bac6c62\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || \"en-us\",\r\n      price: comics.prices.price ? `${comics.prices.price}$` : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}