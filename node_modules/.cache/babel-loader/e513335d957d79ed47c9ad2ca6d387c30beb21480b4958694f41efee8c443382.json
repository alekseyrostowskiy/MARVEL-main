{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMD Ryzen 5 2600\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\FrontEnd\\\\MARVEL\\\\MARVEL-main\\\\src\\\\components\\\\charInfo\\\\CharInfo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/SetContent\";\nimport \"./charInfo.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CharInfo = props => {\n  _s();\n  const [char, setChar] = useState(null);\n  const {\n    getCharacter,\n    clearError,\n    process,\n    setProcess\n  } = /* теперь после использования концепции автоматов нам не нужны loading и error */\n  useMarvelService();\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n  const updateChar = () => {\n    const {\n      charId\n    } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded).then(() => setProcess(\"confirmed\")); /* изменяем process на confirmed именно тут, потому что у нас в http.hook.js и useMarvelService операции асинхронные и если бы мы ставили confirmed уже в hhtp-хуке, то у нас не успевал бы загрузиться наш компонент, так как на тот момент он проходил бы стадию _transformCharacter в ueMarvelservice, поэтому ставим confirmed только по завершении загрузке именно в этом месте   */\n  };\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: setContent(process, View, char)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(CharInfo, \"tBUAl8hXzRL3dwJt+tCK7K6OFlk=\", false, function () {\n  return [useMarvelService];\n});\n_c = CharInfo;\nconst View = ({\n  data\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = data;\n  let imgStyle = {\n    objectFit: \"cover\"\n  };\n  if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n    imgStyle = {\n      objectFit: \"contain\"\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name,\n        style: imgStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: [comics.length > 0 ? null : \"There is no comics with this character\", comics.map((item, i) => {\n        // eslint-disable-next-line\n        if (i > 9) return;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: item.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = View;\nCharInfo.propTypes = {\n  charId: PropTypes.number\n};\nexport default CharInfo;\nvar _c, _c2;\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["useState","useEffect","PropTypes","useMarvelService","setContent","jsxDEV","_jsxDEV","Fragment","_Fragment","CharInfo","props","_s","char","setChar","getCharacter","clearError","process","setProcess","updateChar","charId","then","onCharLoaded","className","children","View","fileName","_jsxFileName","lineNumber","columnNumber","_c","data","name","description","thumbnail","homepage","wiki","comics","imgStyle","objectFit","src","alt","style","href","length","map","item","i","_c2","propTypes","number","$RefreshReg$"],"sources":["C:/Users/AMD Ryzen 5 2600/Desktop/Программирование/Новая папка/FrontEnd/MARVEL/MARVEL-main/src/components/charInfo/CharInfo.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/SetContent\";\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { getCharacter, clearError, process, setProcess } =\n    /* теперь после использования концепции автоматов нам не нужны loading и error */\n    useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n\n    clearError();\n    getCharacter(charId)\n      .then(onCharLoaded)\n      .then(() =>\n        setProcess(\"confirmed\")\n      ); /* изменяем process на confirmed именно тут, потому что у нас в http.hook.js и useMarvelService операции асинхронные и если бы мы ставили confirmed уже в hhtp-хуке, то у нас не успевал бы загрузиться наш компонент, так как на тот момент он проходил бы стадию _transformCharacter в ueMarvelservice, поэтому ставим confirmed только по завершении загрузке именно в этом месте   */\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  return <div className=\"char__info\">{setContent(process, View, char)}</div>;\n};\n\nconst View = ({ data }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = data;\n\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\n        {comics.map((item, i) => {\n          // eslint-disable-next-line\n          if (i > 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAM;IAAEc,YAAY;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAW,CAAC,GACrD;EACAd,gBAAgB,CAAC,CAAC;EAEpBF,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACR,KAAK,CAACS,MAAM,CAAC,CAAC;EAElB,MAAMD,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAM;MAAEC;IAAO,CAAC,GAAGT,KAAK;IACxB,IAAI,CAACS,MAAM,EAAE;MACX;IACF;IAEAJ,UAAU,CAAC,CAAC;IACZD,YAAY,CAACK,MAAM,CAAC,CACjBC,IAAI,CAACC,YAAY,CAAC,CAClBD,IAAI,CAAC,MACJH,UAAU,CAAC,WAAW,CACxB,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMI,YAAY,GAAIT,IAAI,IAAK;IAC7BC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,oBAAON,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAEnB,UAAU,CAACY,OAAO,EAAEQ,IAAI,EAAEZ,IAAI;EAAC;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5E,CAAC;AAACjB,EAAA,CA9BIF,QAAQ;EAAA,QAKVN,gBAAgB;AAAA;AAAA0B,EAAA,GALdpB,QAAQ;AAgCd,MAAMe,IAAI,GAAGA,CAAC;EAAEM;AAAK,CAAC,KAAK;EACzB,MAAM;IAAEC,IAAI;IAAEC,WAAW;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGN,IAAI;EAErE,IAAIO,QAAQ,GAAG;IAAEC,SAAS,EAAE;EAAQ,CAAC;EACrC,IACEL,SAAS,KACT,qEAAqE,EACrE;IACAI,QAAQ,GAAG;MAAEC,SAAS,EAAE;IAAU,CAAC;EACrC;EAEA,oBACEhC,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjB,OAAA;QAAKiC,GAAG,EAAEN,SAAU;QAACO,GAAG,EAAET,IAAK;QAACU,KAAK,EAAEJ;MAAS;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDtB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAKgB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEQ;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7CtB,OAAA;UAAKgB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBjB,OAAA;YAAGoC,IAAI,EAAER,QAAS;YAACZ,SAAS,EAAC,qBAAqB;YAAAC,QAAA,eAChDjB,OAAA;cAAKgB,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACJtB,OAAA;YAAGoC,IAAI,EAAEP,IAAK;YAACb,SAAS,EAAC,0BAA0B;YAAAC,QAAA,eACjDjB,OAAA;cAAKgB,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtB,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAES;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChDtB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3CtB,OAAA;MAAIgB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAC9Ba,MAAM,CAACO,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,wCAAwC,EACnEP,MAAM,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACvB;QACA,IAAIA,CAAC,GAAG,CAAC,EAAE;QACX,oBACExC,OAAA;UAAYgB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EACtCsB,IAAI,CAACd;QAAI,GADHe,CAAC;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CAAC;MAET,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAACmB,GAAA,GA3CIvB,IAAI;AA6CVf,QAAQ,CAACuC,SAAS,GAAG;EACnB7B,MAAM,EAAEjB,SAAS,CAAC+C;AACpB,CAAC;AAED,eAAexC,QAAQ;AAAC,IAAAoB,EAAA,EAAAkB,GAAA;AAAAG,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}