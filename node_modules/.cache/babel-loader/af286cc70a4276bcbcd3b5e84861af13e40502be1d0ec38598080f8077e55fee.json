{"ast":null,"code":"import{useState}from\"react\";import{Formik,Form,Field,ErrorMessage as FormikErrorMessage}from\"formik\";import*as Yup from\"yup\";import{Link}from\"react-router-dom\";import useMarvelService from\"../../services/MarvelService\";import ErrorMessage from\"../errorMessage/ErrorMessage\";import\"./charSearchForm.scss\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CharSearchForm=()=>{const[char,setChar]=useState(null);const{loading,error,getCharacterByName,clearError}=useMarvelService();const onCharLoaded=char=>{setChar(char);};const updateChar=name=>{clearError();getCharacterByName(name).then(onCharLoaded);};const errorMessage=error?/*#__PURE__*/_jsx(\"div\",{className:\"char__search-critical-error\",children:/*#__PURE__*/_jsx(ErrorMessage,{})}):null;const results=!char?null:char.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"char__search-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"char__search-success\",children:[\"There is! Visit \",char[0].name,\" page?\"]}),/*#__PURE__*/_jsx(Link,{to:\"/characters/\".concat(char[0].id),className:\"button button__secondary\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",children:\"To page\"})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"char__search-error\",children:\"The character was not found. Check the name and try again\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"char__search-form\",children:[/*#__PURE__*/_jsx(Formik,{initialValues:{charName:\"\"},validationSchema:Yup.object({charName:Yup.string().required(\"This field is required\")}),onSubmit:_ref=>{let{charName}=_ref;updateChar(charName);},children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"label\",{className:\"char__search-label\",htmlFor:\"charName\",children:\"Or find a character by name:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"char__search-wrapper\",children:[/*#__PURE__*/_jsx(Field,{id:\"charName\",name:\"charName\",type:\"text\",placeholder:\"Enter name\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button button__main\",disabled:loading,children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",children:\"find\"})})]}),/*#__PURE__*/_jsx(FormikErrorMessage,{component:\"div\",className:\"char__search-error\",name:\"charName\"})]})}),results,errorMessage]});};export default CharSearchForm;","map":{"version":3,"names":["useState","Formik","Form","Field","ErrorMessage","FormikErrorMessage","Yup","Link","useMarvelService","jsx","_jsx","jsxs","_jsxs","CharSearchForm","char","setChar","loading","error","getCharacterByName","clearError","onCharLoaded","updateChar","name","then","errorMessage","className","children","results","length","to","concat","id","initialValues","charName","validationSchema","object","string","required","onSubmit","_ref","htmlFor","type","placeholder","disabled","component"],"sources":["C:/Users/AMD Ryzen 5 2600/Desktop/Программирование/Новая папка/FrontEnd/MARVEL/MARVEL-main/src/components/charSearchForm/CharSearchForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./charSearchForm.scss\";\r\n\r\nconst CharSearchForm = () => {\r\n  const [char, setChar] = useState(null);\r\n  const { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = (name) => {\r\n    clearError();\r\n\r\n    getCharacterByName(name).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? (\r\n    <div className=\"char__search-critical-error\">\r\n      <ErrorMessage />\r\n    </div>\r\n  ) : null;\r\n  const results = !char ? null : char.length > 0 ? (\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">\r\n        There is! Visit {char[0].name} page?\r\n      </div>\r\n      <Link\r\n        to={`/characters/${char[0].id}`}\r\n        className=\"button button__secondary\"\r\n      >\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues={{\r\n          charName: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          charName: Yup.string().required(\"This field is required\"),\r\n        })}\r\n        onSubmit={({ charName }) => {\r\n          updateChar(charName);\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">\r\n            Or find a character by name:\r\n          </label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field\r\n              id=\"charName\"\r\n              name=\"charName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button button__main\"\r\n              disabled={loading}\r\n            >\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage\r\n            component=\"div\"\r\n            className=\"char__search-error\"\r\n            name=\"charName\"\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      {results}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharSearchForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}