{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMD Ryzen 5 2600\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\FrontEnd\\\\MARVEL\\\\MARVEL-main\\\\src\\\\components\\\\charInfo\\\\CharInfo.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/SetContent';\nimport './charInfo.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CharInfo = props => {\n  _s();\n  const [char, setChar] = useState(null);\n  const {\n    getCharacter,\n    clearError,\n    process,\n    setProcess\n  } = /* теперь после использования концепции автоматов нам не нужны loading и error */\n  useMarvelService();\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n  const updateChar = () => {\n    const {\n      charId\n    } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded).then(() => setProcess('confirmed')); /* изменяем process на confirmed именно тут, потому что у нас в http.hook.js и useMarvelService операции асинхронные и если бы мы ставили confirmed уже в hhtp-хуке, то у нас не успевал бы загрузиться наш компонент, так как на тот момент он проходил бы стадию _transformCharacter в ueMarvelservice, поэтому ставим confirmed только по завершении загрузке именно в этом месте   */\n  };\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: setContent(process, View, char)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CharInfo, \"tBUAl8hXzRL3dwJt+tCK7K6OFlk=\", false, function () {\n  return [useMarvelService];\n});\n_c = CharInfo;\nconst View = ({\n  data\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = data;\n  let imgStyle = {\n    objectFit: 'cover'\n  };\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {\n      objectFit: 'contain'\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name,\n        style: imgStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: [comics.length > 0 ? null : 'There is no comics with this character', comics.map((item, i) => {\n        // eslint-disable-next-line\n        if (i > 9) return;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: item.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_c2 = View;\nCharInfo.propTypes = {\n  charId: PropTypes.number\n};\nexport default CharInfo;\nvar _c, _c2;\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["PropTypes","useEffect","useState","useMarvelService","setContent","jsxDEV","_jsxDEV","Fragment","_Fragment","CharInfo","props","_s","char","setChar","getCharacter","clearError","process","setProcess","updateChar","charId","then","onCharLoaded","className","children","View","fileName","_jsxFileName","lineNumber","columnNumber","_c","data","name","description","thumbnail","homepage","wiki","comics","imgStyle","objectFit","src","alt","style","length","map","item","i","_c2","propTypes","number","$RefreshReg$"],"sources":["C:/Users/AMD Ryzen 5 2600/Desktop/Программирование/Новая папка/FrontEnd/MARVEL/MARVEL-main/src/components/charInfo/CharInfo.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { useEffect, useState } from 'react'\n\nimport useMarvelService from '../../services/MarvelService'\nimport setContent from '../../utils/SetContent'\nimport './charInfo.scss'\n\nconst CharInfo = props => {\n\tconst [char, setChar] = useState(null)\n\n\tconst { getCharacter, clearError, process, setProcess } =\n\t\t/* теперь после использования концепции автоматов нам не нужны loading и error */\n\t\tuseMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\t}, [props.charId])\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props\n\t\tif (!charId) {\n\t\t\treturn\n\t\t}\n\n\t\tclearError()\n\t\tgetCharacter(charId)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() =>\n\t\t\t\tsetProcess('confirmed')\n\t\t\t) /* изменяем process на confirmed именно тут, потому что у нас в http.hook.js и useMarvelService операции асинхронные и если бы мы ставили confirmed уже в hhtp-хуке, то у нас не успевал бы загрузиться наш компонент, так как на тот момент он проходил бы стадию _transformCharacter в ueMarvelservice, поэтому ставим confirmed только по завершении загрузке именно в этом месте   */\n\t}\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char)\n\t}\n\n\treturn <div className='char__info'>{setContent(process, View, char)}</div>\n}\n\nconst View = ({ data }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = data\n\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' }\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{description}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>\n\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif (i > 9) return\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className='char__comics-item'>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n}\n\nexport default CharInfo\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}