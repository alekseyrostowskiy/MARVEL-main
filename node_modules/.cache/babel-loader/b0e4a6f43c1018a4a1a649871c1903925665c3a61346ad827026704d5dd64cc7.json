{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\FrontEnd\\\\MARVEL\\\\MARVEL-main\\\\src\\\\components\\\\charList\\\\CharList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this);\n      break;\n    case \"loading\":\n      return newItemLoading ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this); /* создали отдельную функцию, потому что наш компонент работает немножко иначе из-за наличия newItemLoading  */\n      break;\n    case \"confirmed\":\n      return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n      break;\n    case \"error\":\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n      break;\n  }\n};\nconst CharList = props => {\n  _s();\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const {\n    loading,\n    error,\n    getAllCharacters,\n    process,\n    setProcess\n  } = useMarvelService();\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded).then(() => setProcess(\"confirmed\"));\n  };\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    setCharList(charList => [...charList, ...newCharList]);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    setCharEnded(charEnded => ended);\n  };\n  const itemRefs = useRef([]);\n  const focusOnItem = id => {\n    // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n    // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n    // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n    // в отдельный компонент. Но кода будет больше, появится новое состояние\n    // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n    // По возможности, не злоупотребляйте рефами, только в крайних случаях\n    itemRefs.current.forEach(item => item.classList.remove(\"char__item_selected\"));\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = {\n        objectFit: \"cover\"\n      };\n      if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = {\n          objectFit: \"unset\"\n        };\n      }\n      return /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"char__item\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"char__item\",\n            tabIndex: 0,\n            ref: el => itemRefs.current[i] = el,\n            onClick: () => {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            },\n            onKeyPress: e => {\n              if (e.key === \" \" || e.key === \"Enter\") {\n                props.onCharSelected(item.id);\n                focusOnItem(i);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.thumbnail,\n              alt: item.name,\n              style: imgStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"char__name\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        component: null,\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  const content = useMemo(() => {\n    return setContent(process, () => renderItems(charList), newItemLoading);\n  }, [process]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [content, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        display: charEnded ? \"none\" : \"block\"\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(CharList, \"TYCjYhDhtwvi0Uyyppc/tyxmR2w=\", false, function () {\n  return [useMarvelService];\n});\n_c = CharList;\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;\nvar _c;\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"names":["useState","useEffect","useRef","useMemo","PropTypes","CSSTransition","TransitionGroup","Spinner","ErrorMessage","useMarvelService","jsxDEV","_jsxDEV","Fragment","_Fragment","setContent","process","Component","newItemLoading","fileName","_jsxFileName","lineNumber","columnNumber","CharList","props","_s","charList","setCharList","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","loading","error","getAllCharacters","setProcess","onRequest","initial","then","onCharListLoaded","newCharList","ended","length","itemRefs","focusOnItem","id","current","forEach","item","classList","remove","add","focus","renderItems","arr","items","map","i","imgStyle","objectFit","thumbnail","timeout","classNames","children","className","tabIndex","ref","el","onClick","onCharSelected","onKeyPress","e","key","src","alt","name","style","component","content","disabled","display","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Программирование/FrontEnd/MARVEL/MARVEL-main/src/components/charList/CharList.js"],"sourcesContent":["import { useState, useEffect, useRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n      break;\n    case \"loading\":\n      return newItemLoading ? (\n        <Component />\n      ) : (\n        <Spinner />\n      ); /* создали отдельную функцию, потому что наш компонент работает немножко иначе из-за наличия newItemLoading  */\n      break;\n    case \"confirmed\":\n      return <Component />;\n      break;\n    case \"error\":\n      return <ErrorMessage />;\n      break;\n  }\n};\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharacters, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n    // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n    // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n    // в отдельный компонент. Но кода будет больше, появится новое состояние\n    // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n    // По возможности, не злоупотребляйте рефами, только в крайних случаях\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\n          <>\n            <li\n              className=\"char__item\"\n              tabIndex={0}\n              ref={(el) => (itemRefs.current[i] = el)}\n              onClick={() => {\n                props.onCharSelected(item.id);\n                focusOnItem(i);\n              }}\n              onKeyPress={(e) => {\n                if (e.key === \" \" || e.key === \"Enter\") {\n                  props.onCharSelected(item.id);\n                  focusOnItem(i);\n                }\n              }}\n            >\n              <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n              <div className=\"char__name\">{item.name}</div>\n            </li>\n          </>\n        </CSSTransition>\n      );\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return (\n      <ul className=\"char__grid\">\n        <TransitionGroup component={null}>{items}</TransitionGroup>\n      </ul>\n    );\n  }\n\n  const content = useMemo(() => {\n    return setContent(process, () => renderItems(charList), newItemLoading);\n  }, [process]);\n\n  return (\n    <div className=\"char__list\">\n      {content}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}