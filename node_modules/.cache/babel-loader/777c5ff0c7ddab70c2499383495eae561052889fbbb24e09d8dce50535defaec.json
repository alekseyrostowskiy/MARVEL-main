{"ast":null,"code":"import{useEffect,useState}from'react';import useMarvelService from'../../services/MarvelService';import setContent from'../../utils/SetContent';import'./charInfo.scss';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CharInfo=props=>{const[char,setChar]=useState(null);const{getCharacter,clearError,process,setProcess}=/* теперь после использования концепции автоматов нам не нужны loading и error */useMarvelService();useEffect(()=>{updateChar();},[props.charId]);const updateChar=()=>{const{charId}=props;if(!charId){return;}clearError();getCharacter(charId).then(onCharLoaded).then(()=>setProcess('confirmed'));/* изменяем process на confirmed именно тут, потому что у нас в http.hook.js и useMarvelService операции асинхронные и если бы мы ставили confirmed уже в hhtp-хуке, то у нас не успевал бы загрузиться наш компонент, так как на тот момент он проходил бы стадию _transformCharacter в ueMarvelservice, поэтому ставим confirmed только по завершении загрузке именно в этом месте   */};const onCharLoaded=char=>{setChar(char);};return/*#__PURE__*/_jsx(\"div\",{className:\"char__info\",children:setContent(process,View,char)});};const View=_ref=>{let{data}=_ref;const{name,description,thumbnail,homepage,wiki,comics}=data;let imgStyle={objectFit:'cover'};if(thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){imgStyle={objectFit:'contain'};}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"char__basics\",children:[/*#__PURE__*/_jsx(\"img\",{src:thumbnail,alt:name,style:imgStyle}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"char__info-name\",children:name}),/*#__PURE__*/_jsxs(\"div\",{className:\"char__btns\",children:[/*#__PURE__*/_jsx(\"a\",{className:\"button button__main\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",children:\"homepage\"})}),/*#__PURE__*/_jsx(\"a\",{className:\"button button__secondary\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",children:\"Wiki\"})})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"char__descr\",children:description}),/*#__PURE__*/_jsx(\"div\",{className:\"char__comics\",children:\"Comics:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"char__comics-list\",children:[comics.length>0?null:'There is no comics with this character',comics.map((item,i)=>{// eslint-disable-next-line\nif(i>9)return;return/*#__PURE__*/_jsx(\"li\",{className:\"char__comics-item\",children:item.name},i);})]})]});};export default CharInfo;","map":{"version":3,"names":["useEffect","useState","useMarvelService","setContent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CharInfo","props","char","setChar","getCharacter","clearError","process","setProcess","updateChar","charId","then","onCharLoaded","className","children","View","_ref","data","name","description","thumbnail","homepage","wiki","comics","imgStyle","objectFit","src","alt","style","length","map","item","i"],"sources":["C:/Users/AMD Ryzen 5 2600/Desktop/Программирование/Новая папка/FrontEnd/MARVEL/MARVEL-main/src/components/charInfo/CharInfo.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { useEffect, useState } from 'react'\n\nimport useMarvelService from '../../services/MarvelService'\nimport setContent from '../../utils/SetContent'\nimport './charInfo.scss'\n\nconst CharInfo = props => {\n\tconst [char, setChar] = useState(null)\n\n\tconst { getCharacter, clearError, process, setProcess } =\n\t\t/* теперь после использования концепции автоматов нам не нужны loading и error */\n\t\tuseMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\t}, [props.charId])\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props\n\t\tif (!charId) {\n\t\t\treturn\n\t\t}\n\n\t\tclearError()\n\t\tgetCharacter(charId)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() =>\n\t\t\t\tsetProcess('confirmed')\n\t\t\t) /* изменяем process на confirmed именно тут, потому что у нас в http.hook.js и useMarvelService операции асинхронные и если бы мы ставили confirmed уже в hhtp-хуке, то у нас не успевал бы загрузиться наш компонент, так как на тот момент он проходил бы стадию _transformCharacter в ueMarvelservice, поэтому ставим confirmed только по завершении загрузке именно в этом месте   */\n\t}\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char)\n\t}\n\n\treturn <div className='char__info'>{setContent(process, View, char)}</div>\n}\n\nconst View = ({ data }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = data\n\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' }\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{description}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>\n\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif (i > 9) return\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className='char__comics-item'>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n}\n\nexport default CharInfo\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}