{"ast":null,"code":"import{useState,useEffect,useRef,useMemo}from\"react\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import Spinner from\"../spinner/Spinner\";import ErrorMessage from\"../errorMessage/ErrorMessage\";import useMarvelService from\"../../services/MarvelService\";import\"./charList.scss\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const setContent=(process,Component,newItemLoading)=>{switch(process){case\"waiting\":return/*#__PURE__*/_jsx(Spinner,{});break;case\"loading\":return newItemLoading?/*#__PURE__*/_jsx(Component,{}):/*#__PURE__*/_jsx(Spinner,{});/* создали отдельную функцию, потому что наш компонент работает немножко иначе из-за наличия newItemLoading  */break;case\"confirmed\":return/*#__PURE__*/_jsx(Component,{});break;case\"error\":return/*#__PURE__*/_jsx(ErrorMessage,{});break;}};const CharList=props=>{const[charList,setCharList]=useState([]);const[newItemLoading,setNewItemLoading]=useState(false);const[offset,setOffset]=useState(210);const[charEnded,setCharEnded]=useState(false);const{loading,error,getAllCharacters,process,setProcess}=useMarvelService();useEffect(()=>{onRequest(offset,true);},[]);const onRequest=(offset,initial)=>{initial?setNewItemLoading(false):setNewItemLoading(true);getAllCharacters(offset).then(onCharListLoaded).then(()=>setProcess(\"confirmed\"));};const onCharListLoaded=newCharList=>{let ended=false;if(newCharList.length<9){ended=true;}setCharList(charList=>[...charList,...newCharList]);setNewItemLoading(newItemLoading=>false);setOffset(offset=>offset+9);setCharEnded(charEnded=>ended);};const itemRefs=useRef([]);const focusOnItem=id=>{// Я реализовал вариант чуть сложнее, и с классом и с фокусом\n// Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n// На самом деле, решение с css-классом можно сделать, вынеся персонажа\n// в отдельный компонент. Но кода будет больше, появится новое состояние\n// и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n// По возможности, не злоупотребляйте рефами, только в крайних случаях\nitemRefs.current.forEach(item=>item.classList.remove(\"char__item_selected\"));itemRefs.current[id].classList.add(\"char__item_selected\");itemRefs.current[id].focus();};// Этот метод создан для оптимизации,\n// чтобы не помещать такую конструкцию в метод render\nfunction renderItems(arr){const items=arr.map((item,i)=>{let imgStyle={objectFit:\"cover\"};if(item.thumbnail===\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"){imgStyle={objectFit:\"unset\"};}return/*#__PURE__*/_jsx(CSSTransition,{timeout:500,classNames:\"char__item\",children:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"li\",{className:\"char__item\",tabIndex:0,ref:el=>itemRefs.current[i]=el,onClick:()=>{props.onCharSelected(item.id);focusOnItem(i);},onKeyPress:e=>{if(e.key===\" \"||e.key===\"Enter\"){props.onCharSelected(item.id);focusOnItem(i);}},children:[/*#__PURE__*/_jsx(\"img\",{src:item.thumbnail,alt:item.name,style:imgStyle}),/*#__PURE__*/_jsx(\"div\",{className:\"char__name\",children:item.name})]})})},item.id);});// А эта конструкция вынесена для центровки спиннера/ошибки\nreturn/*#__PURE__*/_jsx(\"ul\",{className:\"char__grid\",children:/*#__PURE__*/_jsx(TransitionGroup,{component:null,children:items})});}const content=useMemo(()=>{return setContent(process,()=>renderItems(charList),newItemLoading);},[process]);return/*#__PURE__*/_jsxs(\"div\",{className:\"char__list\",children:[content,/*#__PURE__*/_jsx(\"button\",{className:\"button button__main button__long\",disabled:newItemLoading,style:{display:charEnded?\"none\":\"block\"},onClick:()=>onRequest(offset),children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",children:\"load more\"})})]});};export default CharList;","map":{"version":3,"names":["useState","useEffect","useRef","useMemo","CSSTransition","TransitionGroup","Spinner","ErrorMessage","useMarvelService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","setContent","process","Component","newItemLoading","CharList","props","charList","setCharList","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","loading","error","getAllCharacters","setProcess","onRequest","initial","then","onCharListLoaded","newCharList","ended","length","itemRefs","focusOnItem","id","current","forEach","item","classList","remove","add","focus","renderItems","arr","items","map","i","imgStyle","objectFit","thumbnail","timeout","classNames","children","className","tabIndex","ref","el","onClick","onCharSelected","onKeyPress","e","key","src","alt","name","style","component","content","disabled","display"],"sources":["C:/Users/AMD Ryzen 5 2600/Desktop/Программирование/Новая папка/FrontEnd/MARVEL/MARVEL-main/src/components/charList/CharList.js"],"sourcesContent":["import { useState, useEffect, useRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n      break;\n    case \"loading\":\n      return newItemLoading ? (\n        <Component />\n      ) : (\n        <Spinner />\n      ); /* создали отдельную функцию, потому что наш компонент работает немножко иначе из-за наличия newItemLoading  */\n      break;\n    case \"confirmed\":\n      return <Component />;\n      break;\n    case \"error\":\n      return <ErrorMessage />;\n      break;\n  }\n};\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharacters, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n    // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n    // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n    // в отдельный компонент. Но кода будет больше, появится новое состояние\n    // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n    // По возможности, не злоупотребляйте рефами, только в крайних случаях\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\n          <>\n            <li\n              className=\"char__item\"\n              tabIndex={0}\n              ref={(el) => (itemRefs.current[i] = el)}\n              onClick={() => {\n                props.onCharSelected(item.id);\n                focusOnItem(i);\n              }}\n              onKeyPress={(e) => {\n                if (e.key === \" \" || e.key === \"Enter\") {\n                  props.onCharSelected(item.id);\n                  focusOnItem(i);\n                }\n              }}\n            >\n              <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n              <div className=\"char__name\">{item.name}</div>\n            </li>\n          </>\n        </CSSTransition>\n      );\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return (\n      <ul className=\"char__grid\">\n        <TransitionGroup component={null}>{items}</TransitionGroup>\n      </ul>\n    );\n  }\n\n  const content = useMemo(() => {\n    return setContent(process, () => renderItems(charList), newItemLoading);\n  }, [process]);\n\n  return (\n    <div className=\"char__list\">\n      {content}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}